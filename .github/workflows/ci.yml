name: CI - Test bmm-lib

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    name: Test bmm-lib
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest] # macos-latest, windows-latest
        rust: [stable]

    defaults:
      run:
        working-directory: src-tauri/bmm-lib

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          submodules: recursive

      - name: Install Rust
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: ${{ matrix.rust }}
          override: true
          components: rustfmt, clippy

      - name: Install system dependencies (Ubuntu)
        if: matrix.os == 'ubuntu-latest'
        run: |
          sudo apt-get update
          sudo apt-get install -y \
            libglib2.0-dev \
            libgtk-3-dev \
            libsoup-3.0-dev \
            libjavascriptcoregtk-4.1-dev \
            libwebkit2gtk-4.1-dev \
            pkg-config
          
          # Verify installation
          find /usr -name 'libsoup-3.0.pc' 2>/dev/null
          echo "PKG_CONFIG_PATH=$PKG_CONFIG_PATH"
           
          # Verify installation
          find /usr -name 'javascriptcoregtk-4.1.pc' 2>/dev/null || echo "javascriptcoregtk-4.1.pc not found!"
          echo "PKG_CONFIG_PATH=$PKG_CONFIG_PATH"

      - name: Cache cargo dependencies
        uses: actions/cache@v3
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
            src-tauri/bmm-lib/../lovely-injector/target/release  # Cache lovely-injector's target
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}

      - name: Build lovely-injector (macOS only)
        if: matrix.os == 'macos-latest'
        run: |
          cd ../lovely-injector
          SKIP_BUILD_SCRIPT=1 cargo build --release

      - name: Run tests
        run: cargo test -p bmm-lib -- --test-threads=1
